{"version":3,"sources":["components/BBCardPersonaje.js","helpers/BBGetPersonajes.js","hooks/useAllPersonajes.js","helpers/BBGetPersonajeById.js","hooks/useOnePersonaje.js","components/Loading.js","components/BBSelectPersonajes.js","index.js"],"names":["BBCardPersonaje","info","nombre","birthday","apodo","estado","img","className","style","width","src","alt","BBGetPersonajes","a","fetch","request","json","personajes","allPersonajes","map","personaje","id","char_id","name","useAllPersonajes","useState","data","loading","state","setState","useEffect","then","BBGetPersonajeById","idP","url","respuesta","nickname","status","useOnePersonaje","data1","idPersonaje","setIdpersonaje","loading1","setLoading","changeIdPersonaje","Loading","role","BBSelectPersonajes","onChange","e","target","value","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f11b06d.chunk.js","sourcesContent":["import React from 'react';\r\nconst BBCardPersonaje = ({info:{nombre,birthday,apodo,estado,img}}) =>{\r\n    return(\r\n        <>\r\n            <div className=\"card\" style={{width: '18rem'}}>\r\n                <img src={img} className=\"card-img-top\" alt={nombre} />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{nombre}</h5>\r\n                    <p className=\"card-text\">Fecha Nacimiento: {birthday}</p>\r\n                    <p className=\"card-text\">Apodo: {apodo}</p>\r\n                    <p className=\"card-text\">Estado: {estado}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BBCardPersonaje;","const BBGetPersonajes = async() =>{\r\n   const url = 'https://www.breakingbadapi.com/api/characters';\r\n   const request    = await fetch(url);\r\n   const personajes = await request.json();\r\n\r\n    const allPersonajes = personajes.map(personaje=>{\r\n       const {char_id,name} = personaje;\r\n       return {\r\n          id:char_id,\r\n          nombre:name,\r\n       };\r\n    });\r\n\r\n   return allPersonajes;\r\n}\r\n\r\nexport default BBGetPersonajes;","import { useState,useEffect } from \"react\";\r\nimport BBGetPersonajes from \"../helpers/BBGetPersonajes\";\r\n\r\nconst useAllPersonajes = () =>{\r\n    const [state,setState] = useState(\r\n        {\r\n            data:[],\r\n            loading:true,\r\n        }\r\n    );\r\n    useEffect(()=>{\r\n        BBGetPersonajes().then(personajes=>{\r\n            setState(\r\n                {\r\n                    data:personajes,\r\n                    loading:false,\r\n                }\r\n            );\r\n        });\r\n    },[]);\r\n\r\n    return state;\r\n       \r\n    \r\n}\r\n\r\nexport default useAllPersonajes;","const BBGetPersonajeById = async(idP=1) =>{\r\n\r\n    const url = 'https://www.breakingbadapi.com/api/characters/'+idP;\r\n    const request   = await fetch(url);\r\n    const respuesta = await request.json();\r\n    \r\n    const personaje = {\r\n        id:respuesta[0]?.char_id,\r\n        nombre:respuesta[0]?.name,\r\n        img:respuesta[0]?.img,\r\n        apodo:respuesta[0]?.nickname,\r\n        birthday:respuesta[0]?.birthday,\r\n        estado:respuesta[0]?.status,\r\n    }\r\n\r\n    return personaje;\r\n    \r\n}\r\n\r\nexport default BBGetPersonajeById;","import {useState,useEffect} from 'react';\r\nimport BBGetPersonajeById from '../helpers/BBGetPersonajeById';\r\nconst useOnePersonaje = () =>{\r\n    const [state,setState] = useState({\r\n        data1:[],\r\n    }); \r\n    const [idPersonaje,setIdpersonaje] = useState(1);\r\n    const [loading1,setLoading] = useState(true);\r\n    useEffect(()=>{\r\n        if(idPersonaje !== null){\r\n        setLoading(true);\r\n        BBGetPersonajeById(idPersonaje).then(personaje=>{\r\n            setState(\r\n                {\r\n                data1:personaje,\r\n                } \r\n            )\r\n            setLoading(false);\r\n            });\r\n        }\r\n    },[idPersonaje]);\r\n\r\n    const changeIdPersonaje = (id) =>{\r\n        setIdpersonaje(id);\r\n    }\r\n\r\n    return {state,changeIdPersonaje,loading1};\r\n}\r\n\r\nexport default useOnePersonaje;","import React from 'react'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <>\r\n            <div className=\"spinner-border text-primary\" role=\"status\">\r\n                <span className=\"visually-hidden\"></span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import BBCardPersonaje from './BBCardPersonaje';\r\nimport useAllPersonajes from '../hooks/useAllPersonajes';\r\nimport useOnePersonaje from '../hooks/useOnePersonaje';\r\nimport Loading from './Loading';\r\nconst BBSelectPersonajes = () =>{\r\n    const {data,loading}= useAllPersonajes();\r\n    const {state:{data1},changeIdPersonaje,loading1}=useOnePersonaje();\r\n    const setIdPersonaje = e =>{\r\n        changeIdPersonaje(e.target.value);\r\n    }\r\n    return(\r\n        <>\r\n            <h2>PERSONAJES DE BREAKING BAD</h2>\r\n            <br /><br/>\r\n            { loading ? <Loading /> :\r\n            <select onChange={setIdPersonaje} className=\"form-control\">\r\n                {\r\n                    data.map(p=>(\r\n                        <option value={p.id} key={p.id}>{p.nombre}</option>\r\n                    ))\r\n                }\r\n            </select>\r\n            }\r\n            <hr />\r\n           {loading1 ? <Loading /> : <BBCardPersonaje info={data1}  />}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BBSelectPersonajes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BBSelectPersonajes from './components/BBSelectPersonajes';\nReactDOM.render(\n    <BBSelectPersonajes />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}